import {initializeApp} from 'firebase/app';
import {getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider} from 'firebase/auth';
import {getFirestore, doc, getDoc, setDoc} from 'firebase/firestore';   //'doc' is used get a documet from a collection, 'getDoc' and 'setDoc' is used to access and set the data on the document


//setting up firebase base configurations like, telling w/c database to work on and initializing it
const firebaseConfig = {
    apiKey: "AIzaSyBq7upSGDsTANlV8BUlg9SN0Pyp-3tpmD0",
    authDomain: "crown-closing-db.firebaseapp.com",
    projectId: "crown-closing-db",
    storageBucket: "crown-closing-db.appspot.com",
    messagingSenderId: "501509640897",
    appId: "1:501509640897:web:7c8f0c4921f739d3b07a40"
};
  
  // Initialize Firebase
  const fierbaseApp = initializeApp(firebaseConfig);

  const provider = new GoogleAuthProvider();      //creating provider instance

  provider.setCustomParameters({
    prompt: "select_account"
  });

  export const auth = getAuth();     //storing and exporting auth instance
  export const signInWithGooglePopup = () => signInWithPopup(auth, provider);

  export const db = getFirestore();     //creating database instance

  export const createUserDocumetFromAuth = async (userAuth) => {   //storing users generated by the Authentication service in firestore. it takes ther response of the Auth service as a param
    const userDocRef = doc(db, 'users', userAuth.uid)   //userDocRef(an object) is using 'doc' method to get a specific document from 'users' collection inside 'db' database. 'doc' takes 3 args, the database, the collection name, and a unique identifier of a particular document
    
    const userSnapshot = await getDoc(userDocRef)     //userSnapshot is an object contaning data(by using getDoc method) from a doc(userDocRef), userSnapshot is used just to check if there is data on the document('userDocRef' in this case)
    console.log(userSnapshot.exists())               
  
    //if user data does not exist
    if(!userSnapshot.exists()) {
      const {displayName, email} = userAuth;         //displayName and email are some of the attributes returned by Auth service together with uid
      const createdAt = new Date();
      try{
        await setDoc(userDocRef, {displayName, email, createdAt});
      }
      catch(error) {
        console.log('error creating the user', error.message);
      }
    }
    
    //if user data exists
    return userDocRef;
  }
